// –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createWidget –Ω–∞ —ç—Ç—É –≤–µ—Ä—Å–∏—é
function createWidget(container, config) {
    const feeds = generateInstagramFeeds(config);
    const cards = feeds.slice(0, config.maxPosts || 6).map(feed => createCard(feed, config)).join('');

    container.innerHTML = `
        <div class="bhw-widget">
            <div class="bhw-header">
                <div class="bhw-logo-icon">üì∑</div>
                <div class="bhw-branding-text">
                    <h2>${escapeHtml(config.widgetTitle || "Instagram Feed")}</h2>
                    <p>${escapeHtml(config.widgetDescription || "Latest posts from our Instagram")}</p>
                </div>
            </div>
            <div class="bhw-grid">
                ${cards}
            </div>
        </div>
    `;
}

// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
function generateInstagramFeeds(config) {
    let feeds = [];
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ—Å—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (config.customPosts && config.customPosts.length > 0) {
        feeds = config.customPosts.map(post => ({
            id: post.id,
            platform: 'instagram',
            author: post.author,
            avatar: post.avatar,
            content: post.content,
            imageUrl: post.imageUrl,
            timestamp: post.timestamp,
            likes: post.likes,
            comments: post.comments,
            url: post.url
        }));
        
        // –î–æ–ø–æ–ª–Ω—è–µ–º –º–æ–∫–∞–º–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤
        const mockCount = Math.max(0, (config.maxPosts || 6) - feeds.length);
        for (let i = 0; i < mockCount; i++) {
            feeds.push(createMockInstagramFeed());
        }
    } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –º–æ–∫–∏
        const maxPosts = config.maxPosts || 6;
        for (let i = 0; i < maxPosts; i++) {
            feeds.push(createMockInstagramFeed());
        }
    }
    
    return feeds.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
}

// –û–±–Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createCard (–¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–∫ –Ω–∞ –ø–æ—Å—Ç)
function createCard(feed, config) {
    return `
        <div class="bhw-card" ${feed.url ? `onclick="window.open('${escapeAttr(feed.url)}', '_blank')" style="cursor: pointer;"` : ''}>
            <div class="bhw-card-content">
                ${config.showAvatars !== false ? `
                    <div class="bhw-card-header">
                        <img class="bhw-avatar" src="${escapeAttr(feed.avatar)}" alt="${escapeAttr(feed.author)}" loading="lazy"/>
                        <div class="bhw-user-info">
                            <div class="bhw-author">${escapeHtml(feed.author)}</div>
                            ${config.showTimestamp !== false ? `<div class="bhw-time">${timeAgo(feed.timestamp)}</div>` : ''}
                        </div>
                        <div class="bhw-platform-badge">üì∑</div>
                    </div>
                ` : ''}
                <div class="bhw-content">${escapeHtml(feed.content)}</div>
                ${config.showMedia !== false && feed.imageUrl ? `
                    <div class="bhw-media">
                        <img src="${escapeAttr(feed.imageUrl)}" alt="Instagram post" loading="lazy"/>
                    </div>
                ` : ''}
                <div class="bhw-actions">
                    ${feed.likes ? `<div class="bhw-action">‚ù§Ô∏è ${formatNumber(feed.likes)}</div>` : ''}
                    ${feed.comments ? `<div class="bhw-action">üí¨ ${formatNumber(feed.comments)}</div>` : ''}
                    ${feed.url ? `<div class="bhw-action">üëÅÔ∏è View Post</div>` : ''}
                </div>
            </div>
        </div>
    `;
}

// –ó–∞–º–µ–Ω–∏—Ç–µ –≤—ã–∑–æ–≤ generateMockInstagramFeeds –Ω–∞ generateInstagramFeeds –≤ –≤–∞—à–µ–º –∫–æ–¥–µ
